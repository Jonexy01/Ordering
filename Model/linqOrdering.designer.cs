#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OrderingDB")]
	public partial class linqOrderingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertCompletedOrder(CompletedOrder instance);
    partial void UpdateCompletedOrder(CompletedOrder instance);
    partial void DeleteCompletedOrder(CompletedOrder instance);
    partial void InsertFailedOrder(FailedOrder instance);
    partial void UpdateFailedOrder(FailedOrder instance);
    partial void DeleteFailedOrder(FailedOrder instance);
    partial void InsertOrderedProduct(OrderedProduct instance);
    partial void UpdateOrderedProduct(OrderedProduct instance);
    partial void DeleteOrderedProduct(OrderedProduct instance);
    #endregion
		
		public linqOrderingDataContext() : 
				base(global::Model.Properties.Settings.Default.OrderingDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public linqOrderingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqOrderingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqOrderingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqOrderingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<CompletedOrder> CompletedOrders
		{
			get
			{
				return this.GetTable<CompletedOrder>();
			}
		}
		
		public System.Data.Linq.Table<FailedOrder> FailedOrders
		{
			get
			{
				return this.GetTable<FailedOrder>();
			}
		}
		
		public System.Data.Linq.Table<OrderedProduct> OrderedProducts
		{
			get
			{
				return this.GetTable<OrderedProduct>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductsId;
		
		private string _Products;
		
		private System.Nullable<int> _Prices;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductsIdChanging(int value);
    partial void OnProductsIdChanged();
    partial void OnProductsChanging(string value);
    partial void OnProductsChanged();
    partial void OnPricesChanging(System.Nullable<int> value);
    partial void OnPricesChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public Product()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductsId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductsId
		{
			get
			{
				return this._ProductsId;
			}
			set
			{
				if ((this._ProductsId != value))
				{
					this.OnProductsIdChanging(value);
					this.SendPropertyChanging();
					this._ProductsId = value;
					this.SendPropertyChanged("ProductsId");
					this.OnProductsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="VarChar(50)")]
		public string Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this.OnProductsChanging(value);
					this.SendPropertyChanging();
					this._Products = value;
					this.SendPropertyChanged("Products");
					this.OnProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prices", DbType="Int")]
		public System.Nullable<int> Prices
		{
			get
			{
				return this._Prices;
			}
			set
			{
				if ((this._Prices != value))
				{
					this.OnPricesChanging(value);
					this.SendPropertyChanging();
					this._Prices = value;
					this.SendPropertyChanged("Prices");
					this.OnPricesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="VarChar(150)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Order", Storage="_Orders", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private System.Nullable<int> _No_of_products;
		
		private System.Nullable<int> _Total_price;
		
		private System.Nullable<System.DateTime> _Time;
		
		private EntitySet<OrderedProduct> _OrderedProducts;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnNo_of_productsChanging(System.Nullable<int> value);
    partial void OnNo_of_productsChanged();
    partial void OnTotal_priceChanging(System.Nullable<int> value);
    partial void OnTotal_priceChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    #endregion
		
		public Order()
		{
			this._OrderedProducts = new EntitySet<OrderedProduct>(new Action<OrderedProduct>(this.attach_OrderedProducts), new Action<OrderedProduct>(this.detach_OrderedProducts));
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[No of products]", Storage="_No_of_products", DbType="Int")]
		public System.Nullable<int> No_of_products
		{
			get
			{
				return this._No_of_products;
			}
			set
			{
				if ((this._No_of_products != value))
				{
					this.OnNo_of_productsChanging(value);
					this.SendPropertyChanging();
					this._No_of_products = value;
					this.SendPropertyChanged("No_of_products");
					this.OnNo_of_productsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Total price]", Storage="_Total_price", DbType="Int")]
		public System.Nullable<int> Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this.OnTotal_priceChanging(value);
					this.SendPropertyChanging();
					this._Total_price = value;
					this.SendPropertyChanged("Total_price");
					this.OnTotal_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderedProduct", Storage="_OrderedProducts", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<OrderedProduct> OrderedProducts
		{
			get
			{
				return this._OrderedProducts;
			}
			set
			{
				this._OrderedProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Order", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderedProducts(OrderedProduct entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderedProducts(OrderedProduct entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompletedOrder")]
	public partial class CompletedOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompletedOrderId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private System.Nullable<int> _No_of_products;
		
		private System.Nullable<int> _Total_price;
		
		private System.Nullable<System.DateTime> _Time;
		
		private EntitySet<OrderedProduct> _OrderedProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompletedOrderIdChanging(int value);
    partial void OnCompletedOrderIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnNo_of_productsChanging(System.Nullable<int> value);
    partial void OnNo_of_productsChanged();
    partial void OnTotal_priceChanging(System.Nullable<int> value);
    partial void OnTotal_priceChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    #endregion
		
		public CompletedOrder()
		{
			this._OrderedProducts = new EntitySet<OrderedProduct>(new Action<OrderedProduct>(this.attach_OrderedProducts), new Action<OrderedProduct>(this.detach_OrderedProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedOrderId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CompletedOrderId
		{
			get
			{
				return this._CompletedOrderId;
			}
			set
			{
				if ((this._CompletedOrderId != value))
				{
					this.OnCompletedOrderIdChanging(value);
					this.SendPropertyChanging();
					this._CompletedOrderId = value;
					this.SendPropertyChanged("CompletedOrderId");
					this.OnCompletedOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[No of products]", Storage="_No_of_products", DbType="Int")]
		public System.Nullable<int> No_of_products
		{
			get
			{
				return this._No_of_products;
			}
			set
			{
				if ((this._No_of_products != value))
				{
					this.OnNo_of_productsChanging(value);
					this.SendPropertyChanging();
					this._No_of_products = value;
					this.SendPropertyChanged("No_of_products");
					this.OnNo_of_productsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Total price]", Storage="_Total_price", DbType="Int")]
		public System.Nullable<int> Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this.OnTotal_priceChanging(value);
					this.SendPropertyChanging();
					this._Total_price = value;
					this.SendPropertyChanged("Total_price");
					this.OnTotal_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompletedOrder_OrderedProduct", Storage="_OrderedProducts", ThisKey="CompletedOrderId", OtherKey="CompletedOrderId")]
		public EntitySet<OrderedProduct> OrderedProducts
		{
			get
			{
				return this._OrderedProducts;
			}
			set
			{
				this._OrderedProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderedProducts(OrderedProduct entity)
		{
			this.SendPropertyChanging();
			entity.CompletedOrder = this;
		}
		
		private void detach_OrderedProducts(OrderedProduct entity)
		{
			this.SendPropertyChanging();
			entity.CompletedOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FailedOrder")]
	public partial class FailedOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FailedOrderId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private System.Nullable<int> _No_of_products;
		
		private System.Nullable<int> _Total_price;
		
		private System.Nullable<System.DateTime> _Time;
		
		private EntitySet<OrderedProduct> _OrderedProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFailedOrderIdChanging(int value);
    partial void OnFailedOrderIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnNo_of_productsChanging(System.Nullable<int> value);
    partial void OnNo_of_productsChanged();
    partial void OnTotal_priceChanging(System.Nullable<int> value);
    partial void OnTotal_priceChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    #endregion
		
		public FailedOrder()
		{
			this._OrderedProducts = new EntitySet<OrderedProduct>(new Action<OrderedProduct>(this.attach_OrderedProducts), new Action<OrderedProduct>(this.detach_OrderedProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedOrderId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FailedOrderId
		{
			get
			{
				return this._FailedOrderId;
			}
			set
			{
				if ((this._FailedOrderId != value))
				{
					this.OnFailedOrderIdChanging(value);
					this.SendPropertyChanging();
					this._FailedOrderId = value;
					this.SendPropertyChanged("FailedOrderId");
					this.OnFailedOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[No of products]", Storage="_No_of_products", DbType="Int")]
		public System.Nullable<int> No_of_products
		{
			get
			{
				return this._No_of_products;
			}
			set
			{
				if ((this._No_of_products != value))
				{
					this.OnNo_of_productsChanging(value);
					this.SendPropertyChanging();
					this._No_of_products = value;
					this.SendPropertyChanged("No_of_products");
					this.OnNo_of_productsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Total price]", Storage="_Total_price", DbType="Int")]
		public System.Nullable<int> Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this.OnTotal_priceChanging(value);
					this.SendPropertyChanging();
					this._Total_price = value;
					this.SendPropertyChanged("Total_price");
					this.OnTotal_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FailedOrder_OrderedProduct", Storage="_OrderedProducts", ThisKey="FailedOrderId", OtherKey="FailedOrderId")]
		public EntitySet<OrderedProduct> OrderedProducts
		{
			get
			{
				return this._OrderedProducts;
			}
			set
			{
				this._OrderedProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderedProducts(OrderedProduct entity)
		{
			this.SendPropertyChanging();
			entity.FailedOrder = this;
		}
		
		private void detach_OrderedProducts(OrderedProduct entity)
		{
			this.SendPropertyChanging();
			entity.FailedOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderedProduct")]
	public partial class OrderedProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderedProductsId;
		
		private System.Nullable<int> _OrderId;
		
		private System.Nullable<int> _CompletedOrderId;
		
		private System.Nullable<int> _FailedOrderId;
		
		private string _Products;
		
		private System.Nullable<int> _Quantity;
		
		private EntityRef<CompletedOrder> _CompletedOrder;
		
		private EntityRef<FailedOrder> _FailedOrder;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderedProductsIdChanging(int value);
    partial void OnOrderedProductsIdChanged();
    partial void OnOrderIdChanging(System.Nullable<int> value);
    partial void OnOrderIdChanged();
    partial void OnCompletedOrderIdChanging(System.Nullable<int> value);
    partial void OnCompletedOrderIdChanged();
    partial void OnFailedOrderIdChanging(System.Nullable<int> value);
    partial void OnFailedOrderIdChanged();
    partial void OnProductsChanging(string value);
    partial void OnProductsChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    #endregion
		
		public OrderedProduct()
		{
			this._CompletedOrder = default(EntityRef<CompletedOrder>);
			this._FailedOrder = default(EntityRef<FailedOrder>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderedProductsId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderedProductsId
		{
			get
			{
				return this._OrderedProductsId;
			}
			set
			{
				if ((this._OrderedProductsId != value))
				{
					this.OnOrderedProductsIdChanging(value);
					this.SendPropertyChanging();
					this._OrderedProductsId = value;
					this.SendPropertyChanged("OrderedProductsId");
					this.OnOrderedProductsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
		public System.Nullable<int> OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedOrderId", DbType="Int")]
		public System.Nullable<int> CompletedOrderId
		{
			get
			{
				return this._CompletedOrderId;
			}
			set
			{
				if ((this._CompletedOrderId != value))
				{
					if (this._CompletedOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompletedOrderIdChanging(value);
					this.SendPropertyChanging();
					this._CompletedOrderId = value;
					this.SendPropertyChanged("CompletedOrderId");
					this.OnCompletedOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedOrderId", DbType="Int")]
		public System.Nullable<int> FailedOrderId
		{
			get
			{
				return this._FailedOrderId;
			}
			set
			{
				if ((this._FailedOrderId != value))
				{
					if (this._FailedOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFailedOrderIdChanging(value);
					this.SendPropertyChanging();
					this._FailedOrderId = value;
					this.SendPropertyChanged("FailedOrderId");
					this.OnFailedOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="VarChar(50)")]
		public string Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this.OnProductsChanging(value);
					this.SendPropertyChanging();
					this._Products = value;
					this.SendPropertyChanged("Products");
					this.OnProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompletedOrder_OrderedProduct", Storage="_CompletedOrder", ThisKey="CompletedOrderId", OtherKey="CompletedOrderId", IsForeignKey=true)]
		public CompletedOrder CompletedOrder
		{
			get
			{
				return this._CompletedOrder.Entity;
			}
			set
			{
				CompletedOrder previousValue = this._CompletedOrder.Entity;
				if (((previousValue != value) 
							|| (this._CompletedOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompletedOrder.Entity = null;
						previousValue.OrderedProducts.Remove(this);
					}
					this._CompletedOrder.Entity = value;
					if ((value != null))
					{
						value.OrderedProducts.Add(this);
						this._CompletedOrderId = value.CompletedOrderId;
					}
					else
					{
						this._CompletedOrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CompletedOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FailedOrder_OrderedProduct", Storage="_FailedOrder", ThisKey="FailedOrderId", OtherKey="FailedOrderId", IsForeignKey=true)]
		public FailedOrder FailedOrder
		{
			get
			{
				return this._FailedOrder.Entity;
			}
			set
			{
				FailedOrder previousValue = this._FailedOrder.Entity;
				if (((previousValue != value) 
							|| (this._FailedOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FailedOrder.Entity = null;
						previousValue.OrderedProducts.Remove(this);
					}
					this._FailedOrder.Entity = value;
					if ((value != null))
					{
						value.OrderedProducts.Add(this);
						this._FailedOrderId = value.FailedOrderId;
					}
					else
					{
						this._FailedOrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("FailedOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderedProduct", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderedProducts.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderedProducts.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
